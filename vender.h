//==============================
//
// 自販機[vender.h]
// Author : Kaiti Aoto
//
//==============================

// 二重インクルード防止
#ifndef VENDER_H_
#define VENDER_H_

// インクルード
#include "main.h"
#include "object.h"
#include "model.h"
#include "bullet.h"
#include "meshcylinder.h"

// 前方宣言
class CRestock;

// マクロ定義
#define MAX_RESTOCK (25)
#define NUM_REUSETIME (600)

// 自販機クラス
class CVender:public CObject
{
public:
	// メンバ関数
	CVender(int nPriority = PRIORITY_VENDER);
	~CVender();
	HRESULT Init(D3DXVECTOR3 pos, D3DXVECTOR3 rot, CBullet::TYPE type);
	void Uninit(void);
	void Update(void);
	void Draw(void);


	// 設定
	void SetUseRestock(bool bUse) { m_bUseRestock = bUse; }

	// 取得
	D3DXVECTOR3 GetSize(void) { return m_size; }
	D3DXVECTOR3 GetPos(void) { return m_pos; }
	D3DXVECTOR3 GetRot(void) { return m_rot; }
	D3DXMATRIX GetMtx(void) { return m_mtxWorld; }
	CRestock* GetpRestock(void) { return m_pRestock; }
	CBullet::TYPE GetType(void) { return m_type; }
	bool GetUse(void) { return m_bUseRestock; }
	int GetRestock(void) { return m_nRestock; }


	// 静的メンバ関数
	static CVender* Create(const D3DXVECTOR3 pos, const D3DXVECTOR3 rot, CBullet::TYPE type);
	// 設定
	static CBullet::TYPE SetType(const char* pFileName);

private:
	const char* SetModelName(void);

	// メンバ変数
	D3DXVECTOR3 m_pos;			// 位置
	D3DXVECTOR3 m_rot;			// 向き
	D3DXVECTOR3 m_size;			// サイズ
	D3DXMATRIX m_mtxWorld;		// ワールドマトリックス
	CModel* m_pModel;			// モデルへのポインタ
	CMeshCylinder* m_pCylinder;	// シリンダーへのポインタ
	CRestock* m_pRestock;		// 補充ＵＩへのポインタ
	CBullet::TYPE m_type;		// 補充する中身の種類
	bool m_bUse;				// 使用しているか
	bool m_bUseRestock;			// 補充できるか
	int m_nCntReuse;			// 再使用できるまでの時間
	int m_nRestock;				// 補充数


};

#endif